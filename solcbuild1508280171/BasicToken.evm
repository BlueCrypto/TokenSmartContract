    /* "tmp/concatsrc.sol":2142:3053  contract BasicToken is ERC20Basic {... */
  mstore(0x40, 0x60)
  jumpi(tag_1, iszero(callvalue))
  0x0
  dup1
  revert
tag_1:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x0
  codecopy
  0x0
  return
stop

sub_0: assembly {
        /* "tmp/concatsrc.sol":2142:3053  contract BasicToken is ERC20Basic {... */
      mstore(0x40, 0x60)
      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)
      0x18160ddd
      dup2
      eq
      tag_2
      jumpi
      dup1
      0x70a08231
      eq
      tag_3
      jumpi
      dup1
      0xa9059cbb
      eq
      tag_4
      jumpi
      0x0
      dup1
      revert
        /* "tmp/concatsrc.sol":50:76  uint256 public totalSupply */
    tag_2:
      jumpi(tag_5, iszero(callvalue))
      0x0
      dup1
      revert
    tag_5:
      tag_6
      jump(tag_7)
    tag_6:
      mload(0x40)
      swap1
      dup2
      mstore
      0x20
      add
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "tmp/concatsrc.sol":2939:3050  function balanceOf(address _owner) public constant returns (uint256 balance) {... */
    tag_3:
      jumpi(tag_8, iszero(callvalue))
      0x0
      dup1
      revert
    tag_8:
      tag_6
      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))
      jump(tag_10)
        /* "tmp/concatsrc.sol":2403:2737  function transfer(address _to, uint256 _value) public returns (bool) {... */
    tag_4:
      jumpi(tag_11, iszero(callvalue))
      0x0
      dup1
      revert
    tag_11:
      tag_12
      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))
      calldataload(0x24)
      jump(tag_13)
    tag_12:
      mload(0x40)
      swap1
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "tmp/concatsrc.sol":50:76  uint256 public totalSupply */
    tag_7:
      sload(0x0)
      dup2
      jump	// out
        /* "tmp/concatsrc.sol":2939:3050  function balanceOf(address _owner) public constant returns (uint256 balance) {... */
    tag_10:
      sub(exp(0x2, 0xa0), 0x1)
        /* "tmp/concatsrc.sol":3029:3045  balances[_owner] */
      and
        /* "tmp/concatsrc.sol":2999:3014  uint256 balance */
      0x0
        /* "tmp/concatsrc.sol":3029:3045  balances[_owner] */
      swap1
      dup2
      mstore
        /* "tmp/concatsrc.sol":3029:3037  balances */
      0x1
        /* "tmp/concatsrc.sol":3029:3045  balances[_owner] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
      swap1
        /* "tmp/concatsrc.sol":2939:3050  function balanceOf(address _owner) public constant returns (uint256 balance) {... */
      jump	// out
        /* "tmp/concatsrc.sol":2403:2737  function transfer(address _to, uint256 _value) public returns (bool) {... */
    tag_13:
        /* "tmp/concatsrc.sol":2466:2470  bool */
      0x0
      sub(exp(0x2, 0xa0), 0x1)
        /* "tmp/concatsrc.sol":2486:2503  _to != address(0) */
      dup4
      and
      iszero
      iszero
        /* "tmp/concatsrc.sol":2478:2504  require(_to != address(0)) */
      tag_16
      jumpi
      0x0
      dup1
      revert
    tag_16:
      sub(exp(0x2, 0xa0), 0x1)
        /* "tmp/concatsrc.sol":2606:2616  msg.sender */
      caller
        /* "tmp/concatsrc.sol":2597:2617  balances[msg.sender] */
      and
      0x0
      swap1
      dup2
      mstore
        /* "tmp/concatsrc.sol":2597:2605  balances */
      0x1
        /* "tmp/concatsrc.sol":2597:2617  balances[msg.sender] */
      0x20
      mstore
      0x40
      swap1
      keccak256
      sload
        /* "tmp/concatsrc.sol":2597:2629  balances[msg.sender].sub(_value) */
      tag_17
      swap1
        /* "tmp/concatsrc.sol":2622:2628  _value */
      dup4
        /* "tmp/concatsrc.sol":2597:2629  balances[msg.sender].sub(_value) */
      0xffffffff
        /* "tmp/concatsrc.sol":2597:2621  balances[msg.sender].sub */
      tag_18
        /* "tmp/concatsrc.sol":2597:2629  balances[msg.sender].sub(_value) */
      and
      jump	// in
    tag_17:
      sub(exp(0x2, 0xa0), 0x1)
        /* "tmp/concatsrc.sol":2583:2593  msg.sender */
      caller
        /* "tmp/concatsrc.sol":2574:2594  balances[msg.sender] */
      dup2
      and
      0x0
      swap1
      dup2
      mstore
        /* "tmp/concatsrc.sol":2574:2582  balances */
      0x1
        /* "tmp/concatsrc.sol":2574:2594  balances[msg.sender] */
      0x20
      mstore
      0x40
      dup1
      dup3
      keccak256
        /* "tmp/concatsrc.sol":2574:2629  balances[msg.sender] = balances[msg.sender].sub(_value) */
      swap4
      swap1
      swap4
      sstore
        /* "tmp/concatsrc.sol":2651:2664  balances[_to] */
      swap1
      dup6
      and
      dup2
      mstore
      keccak256
      sload
        /* "tmp/concatsrc.sol":2651:2676  balances[_to].add(_value) */
      tag_19
      swap1
        /* "tmp/concatsrc.sol":2669:2675  _value */
      dup4
        /* "tmp/concatsrc.sol":2651:2676  balances[_to].add(_value) */
      0xffffffff
        /* "tmp/concatsrc.sol":2651:2668  balances[_to].add */
      tag_20
        /* "tmp/concatsrc.sol":2651:2676  balances[_to].add(_value) */
      and
      jump	// in
    tag_19:
      sub(exp(0x2, 0xa0), 0x1)
        /* "tmp/concatsrc.sol":2635:2648  balances[_to] */
      dup1
      dup6
      and
      0x0
      dup2
      dup2
      mstore
        /* "tmp/concatsrc.sol":2635:2643  balances */
      0x1
        /* "tmp/concatsrc.sol":2635:2648  balances[_to] */
      0x20
      mstore
      0x40
      swap1
      dup2
      swap1
      keccak256
        /* "tmp/concatsrc.sol":2635:2676  balances[_to] = balances[_to].add(_value) */
      swap4
      swap1
      swap4
      sstore
        /* "tmp/concatsrc.sol":2635:2648  balances[_to] */
      swap2
        /* "tmp/concatsrc.sol":2691:2701  msg.sender */
      caller
        /* "tmp/concatsrc.sol":2682:2715  Transfer(msg.sender, _to, _value) */
      swap1
      swap2
      and
      swap1
      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
      swap1
        /* "tmp/concatsrc.sol":2708:2714  _value */
      dup6
      swap1
        /* "tmp/concatsrc.sol":2682:2715  Transfer(msg.sender, _to, _value) */
      mload
      swap1
      dup2
      mstore
      0x20
      add
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      log3
      pop
        /* "tmp/concatsrc.sol":2728:2732  true */
      0x1
        /* "tmp/concatsrc.sol":2403:2737  function transfer(address _to, uint256 _value) public returns (bool) {... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "tmp/concatsrc.sol":1887:2001  function sub(uint256 a, uint256 b) internal constant returns (uint256) {... */
    tag_18:
        /* "tmp/concatsrc.sol":1949:1956  uint256 */
      0x0
        /* "tmp/concatsrc.sol":1971:1977  b <= a */
      dup3
      dup3
      gt
      iszero
        /* "tmp/concatsrc.sol":1964:1978  assert(b <= a) */
      tag_22
      jumpi
      invalid
    tag_22:
      pop
        /* "tmp/concatsrc.sol":1991:1996  a - b */
      swap1
      sub
      swap1
        /* "tmp/concatsrc.sol":1887:2001  function sub(uint256 a, uint256 b) internal constant returns (uint256) {... */
      jump	// out
        /* "tmp/concatsrc.sol":2005:2138  function add(uint256 a, uint256 b) internal constant returns (uint256) {... */
    tag_20:
        /* "tmp/concatsrc.sol":2067:2074  uint256 */
      0x0
        /* "tmp/concatsrc.sol":2094:2099  a + b */
      dup3
      dup3
      add
        /* "tmp/concatsrc.sol":2112:2118  c >= a */
      dup4
      dup2
      lt
      iszero
        /* "tmp/concatsrc.sol":2105:2119  assert(c >= a) */
      tag_24
      jumpi
      invalid
    tag_24:
        /* "tmp/concatsrc.sol":2132:2133  c */
      swap4
        /* "tmp/concatsrc.sol":2005:2138  function add(uint256 a, uint256 b) internal constant returns (uint256) {... */
      swap3
      pop
      pop
      pop
      jump	// out

    auxdata: 0xa165627a7a72305820a55314da01310b35211b3dc06fe7e4235f3c8564681ed26f8f9df4f3e6a5c61f0029
}
